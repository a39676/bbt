<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="demo.finance.cryptoCoin.data.mapper.CryptoCoinPrice1dayMapper">
	<resultMap id="BaseResultMap"
		type="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1day">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="coin_type" jdbcType="BIGINT"
			property="coinType" />
		<result column="currency_type" jdbcType="INTEGER"
			property="currencyType" />
		<result column="start_price" jdbcType="DECIMAL"
			property="startPrice" />
		<result column="end_price" jdbcType="DECIMAL"
			property="endPrice" />
		<result column="high_price" jdbcType="DECIMAL"
			property="highPrice" />
		<result column="low_price" jdbcType="DECIMAL"
			property="lowPrice" />
		<result column="volume" jdbcType="DECIMAL" property="volume" />
		<result column="start_time" jdbcType="TIMESTAMP"
			property="startTime" />
		<result column="end_time" jdbcType="TIMESTAMP"
			property="endTime" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="is_delete" jdbcType="BIT" property="isDelete" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, coin_type, currency_type, start_price, end_price,
		high_price,
		low_price, volume,
		start_time, end_time, create_time,
		is_delete
	</sql>
	<select id="selectByExample"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1dayExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from crypto_coin_price_1day
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from crypto_coin_price_1day
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		crypto_coin_price_1day
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1dayExample">
		delete from crypto_coin_price_1day
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1day">
		insert into crypto_coin_price_1day (id, coin_type,
		currency_type,
		start_price, end_price, high_price,
		low_price, volume,
		start_time,
		end_time, create_time, is_delete
		)
		values
		(#{id,jdbcType=BIGINT}, #{coinType,jdbcType=BIGINT},
		#{currencyType,jdbcType=INTEGER},
		#{startPrice,jdbcType=DECIMAL},
		#{endPrice,jdbcType=DECIMAL}, #{highPrice,jdbcType=DECIMAL},
		#{lowPrice,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL},
		#{startTime,jdbcType=TIMESTAMP},
		#{endTime,jdbcType=TIMESTAMP},
		#{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1day">
		insert into crypto_coin_price_1day
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="coinType != null">
				coin_type,
			</if>
			<if test="currencyType != null">
				currency_type,
			</if>
			<if test="startPrice != null">
				start_price,
			</if>
			<if test="endPrice != null">
				end_price,
			</if>
			<if test="highPrice != null">
				high_price,
			</if>
			<if test="lowPrice != null">
				low_price,
			</if>
			<if test="volume != null">
				volume,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="coinType != null">
				#{coinType,jdbcType=BIGINT},
			</if>
			<if test="currencyType != null">
				#{currencyType,jdbcType=INTEGER},
			</if>
			<if test="startPrice != null">
				#{startPrice,jdbcType=DECIMAL},
			</if>
			<if test="endPrice != null">
				#{endPrice,jdbcType=DECIMAL},
			</if>
			<if test="highPrice != null">
				#{highPrice,jdbcType=DECIMAL},
			</if>
			<if test="lowPrice != null">
				#{lowPrice,jdbcType=DECIMAL},
			</if>
			<if test="volume != null">
				#{volume,jdbcType=DECIMAL},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1dayExample"
		resultType="java.lang.Long">
		select count(*) from crypto_coin_price_1day
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update crypto_coin_price_1day
		<set>
			<if test="row.id != null">
				id = #{row.id,jdbcType=BIGINT},
			</if>
			<if test="row.coinType != null">
				coin_type = #{row.coinType,jdbcType=BIGINT},
			</if>
			<if test="row.currencyType != null">
				currency_type = #{row.currencyType,jdbcType=INTEGER},
			</if>
			<if test="row.startPrice != null">
				start_price = #{row.startPrice,jdbcType=DECIMAL},
			</if>
			<if test="row.endPrice != null">
				end_price = #{row.endPrice,jdbcType=DECIMAL},
			</if>
			<if test="row.highPrice != null">
				high_price = #{row.highPrice,jdbcType=DECIMAL},
			</if>
			<if test="row.lowPrice != null">
				low_price = #{row.lowPrice,jdbcType=DECIMAL},
			</if>
			<if test="row.volume != null">
				volume = #{row.volume,jdbcType=DECIMAL},
			</if>
			<if test="row.startTime != null">
				start_time = #{row.startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="row.endTime != null">
				end_time = #{row.endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="row.createTime != null">
				create_time = #{row.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="row.isDelete != null">
				is_delete = #{row.isDelete,jdbcType=BIT},
			</if>
		</set>
		<if test="example != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update crypto_coin_price_1day
		set id = #{row.id,jdbcType=BIGINT},
		coin_type = #{row.coinType,jdbcType=BIGINT},
		currency_type =
		#{row.currencyType,jdbcType=INTEGER},
		start_price =
		#{row.startPrice,jdbcType=DECIMAL},
		end_price =
		#{row.endPrice,jdbcType=DECIMAL},
		high_price =
		#{row.highPrice,jdbcType=DECIMAL},
		low_price =
		#{row.lowPrice,jdbcType=DECIMAL},
		volume =
		#{row.volume,jdbcType=DECIMAL},
		start_time =
		#{row.startTime,jdbcType=TIMESTAMP},
		end_time =
		#{row.endTime,jdbcType=TIMESTAMP},
		create_time =
		#{row.createTime,jdbcType=TIMESTAMP},
		is_delete =
		#{row.isDelete,jdbcType=BIT}
		<if test="example != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1day">
		update crypto_coin_price_1day
		<set>
			<if test="coinType != null">
				coin_type = #{coinType,jdbcType=BIGINT},
			</if>
			<if test="currencyType != null">
				currency_type = #{currencyType,jdbcType=INTEGER},
			</if>
			<if test="startPrice != null">
				start_price = #{startPrice,jdbcType=DECIMAL},
			</if>
			<if test="endPrice != null">
				end_price = #{endPrice,jdbcType=DECIMAL},
			</if>
			<if test="highPrice != null">
				high_price = #{highPrice,jdbcType=DECIMAL},
			</if>
			<if test="lowPrice != null">
				low_price = #{lowPrice,jdbcType=DECIMAL},
			</if>
			<if test="volume != null">
				volume = #{volume,jdbcType=DECIMAL},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1day">
		update crypto_coin_price_1day
		set coin_type =
		#{coinType,jdbcType=BIGINT},
		currency_type =
		#{currencyType,jdbcType=INTEGER},
		start_price =
		#{startPrice,jdbcType=DECIMAL},
		end_price =
		#{endPrice,jdbcType=DECIMAL},
		high_price =
		#{highPrice,jdbcType=DECIMAL},
		low_price =
		#{lowPrice,jdbcType=DECIMAL},
		volume = #{volume,jdbcType=DECIMAL},
		start_time = #{startTime,jdbcType=TIMESTAMP},
		end_time =
		#{endTime,jdbcType=TIMESTAMP},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		is_delete = #{isDelete,jdbcType=BIT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByExampleWithRowbounds"
		parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinPrice1dayExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from crypto_coin_price_1day
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectLastDataByCoinTypeAndCurrencyType"
		resultMap="BaseResultMap">
		select
		  *
		from 
		  crypto_coin_price_1day
		where
          1=1
          and coin_type = #{coinType}
          and currency_type = #{currencyType}
		order by start_time desc
		limit 1
	</select>
</mapper>