<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.testCase.mapper.TestEventMapper">
  <resultMap id="BaseResultMap" type="demo.testCase.pojo.po.TestEvent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="case_id" jdbcType="BIGINT" property="caseId" />
    <result column="process_id" jdbcType="BIGINT" property="processId" />
    <result column="module_id" jdbcType="BIGINT" property="moduleId" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="report_path" jdbcType="VARCHAR" property="reportPath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_pass" jdbcType="BIT" property="isPass" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, case_id, process_id, module_id, event_name, remark, report_path, 
    create_time, start_time, end_time, is_pass, is_delete
  </sql>
  <select id="selectByExample" parameterType="demo.testCase.pojo.po.TestEventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test_event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.testCase.pojo.po.TestEventExample">
    delete from test_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.testCase.pojo.po.TestEvent">
    insert into test_event (id, project_id, case_id, 
      process_id, module_id, event_name, 
      remark, report_path, create_time, 
      start_time, end_time, is_pass, 
      is_delete)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{caseId,jdbcType=BIGINT}, 
      #{processId,jdbcType=BIGINT}, #{moduleId,jdbcType=BIGINT}, #{eventName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{reportPath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{isPass,jdbcType=BIT}, 
      #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="demo.testCase.pojo.po.TestEvent">
    insert into test_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="caseId != null">
        case_id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="reportPath != null">
        report_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=BIGINT},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=BIGINT},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=BIGINT},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reportPath != null">
        #{reportPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.testCase.pojo.po.TestEventExample" resultType="java.lang.Long">
    select count(*) from test_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.caseId != null">
        case_id = #{record.caseId,jdbcType=BIGINT},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=BIGINT},
      </if>
      <if test="record.moduleId != null">
        module_id = #{record.moduleId,jdbcType=BIGINT},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.reportPath != null">
        report_path = #{record.reportPath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPass != null">
        is_pass = #{record.isPass,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_event
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      case_id = #{record.caseId,jdbcType=BIGINT},
      process_id = #{record.processId,jdbcType=BIGINT},
      module_id = #{record.moduleId,jdbcType=BIGINT},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      report_path = #{record.reportPath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_pass = #{record.isPass,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.testCase.pojo.po.TestEvent">
    update test_event
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="caseId != null">
        case_id = #{caseId,jdbcType=BIGINT},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=BIGINT},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=BIGINT},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reportPath != null">
        report_path = #{reportPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.testCase.pojo.po.TestEvent">
    update test_event
    set project_id = #{projectId,jdbcType=BIGINT},
      case_id = #{caseId,jdbcType=BIGINT},
      process_id = #{processId,jdbcType=BIGINT},
      module_id = #{moduleId,jdbcType=BIGINT},
      event_name = #{eventName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      report_path = #{reportPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_pass = #{isPass,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="existsRuningEvent" resultType="int">
    select exists(
      select 
        1 
      from 
        test_event 
      where 
        is_delete = false 
        and start_time is not null 
        and end_time is null
    )
  </select>

  <select id="countRuningEvent" resultType="int">
    select 
      count(*) 
    from 
      test_event 
    where 
      is_delete = false 
      and start_time is not null 
      and end_time is null
  </select>
  
  <select id="countWaitingEvent" resultType="int">
    select 
      count(*) 
    from 
      test_event 
    where 
      is_delete = false 
      and start_time is null 
  </select>

  <update id="fixMovieClawingTestEventStatus">
    update 
      test_event 
    set 
      end_time = now(), 
      is_pass = false 
    where 
      is_delete = false 
      and start_time is not null 
      and end_time is null
  </update>

  <select id="findTestEventNotRunYet" resultMap="BaseResultMap">
    select 
      * 
    from 
      test_event
    where 
      is_delete = false
      and start_time is null
  </select>

  <select id="findTestEventPageByCondition" resultMap="BaseResultMap">
    select
      *
    from
      test_event
    <where>
      is_delete = false
      and report_path is not null
      <if test="moduleId != null">
        and module_id = #{moduleId}
      </if>
      <if test="caseId != null">
        and case_id = #{caseId}
      </if>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="eventName != null">
        and event_name like concat('%', #{eventName}, '%')
      </if>
      <if test="reportPath != null">
        and report_path = #{reportPath}
      </if>
      <if test="createStartTime != null">
        and create_time &gt;= #{createStartTime}
      </if>
      <if test="createEndTime != null">
        and create_time &lt;= #{createEndTime}
      </if>
      <if test="runTimeStartTime != null">
        and start_time &gt;= #{runTimeStartTime}
      </if>
      <if test="runTimeEndTime != null">
        and start_time &lt;= #{runTimeEndTime}
      </if>
      <if test="endTime != null">
        and create_time &lt;= #{endTime}
      </if>
    </where>
    order by create_time desc
    <if test="limit != null">
      limit #{limit}
    </if>
    <if test="limit == null">
      limit 50
    </if>
  </select>
</mapper>