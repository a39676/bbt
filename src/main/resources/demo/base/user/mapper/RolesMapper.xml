<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.base.user.mapper.RolesMapper">

  <resultMap id="BaseResultMap" type="demo.base.user.pojo.po.Roles">
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role" jdbcType="CHAR" property="role" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  
  <insert id="insert" parameterType="demo.base.user.pojo.po.Roles">
    insert into roles (role_id, role, is_delete
      )
    values (#{roleId,jdbcType=BIGINT}, #{role,jdbcType=CHAR}, #{isDelete,jdbcType=BIT}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="demo.base.user.pojo.po.Roles">
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=CHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  
  <insert id="insertOrUpdate">
    insert into 
      roles (
        role_id, 
        role, 
        is_delete
      )
    values 
    (
      #{roleId},
      #{role},
      #{isDelete}
    )
    on duplicate key
      update
        role = #{role}, is_delete = #{isDelete}
  </insert>

  <select id="getRoleByName" resultMap="BaseResultMap">
    select * from roles where role = #{roleName} and is_delete = false
  </select>
  
  <select id="getRoleList" resultMap="BaseResultMap">
    select
      *
    from
      roles
    where 
      is_delete = 0
  </select>

  <select id="findRolesByAuthId" resultMap="BaseResultMap">
    select
      r.*
    from
      auth

      left join auth_role as ar
        on auth.id = ar.auth_id
      left join roles as r
        on ar.role_id = r.role_id

    where
      auth.is_delete = false
      and ar.is_delete = false
      and a.is_delete = false
      and a.id = #{authId}
  </select>

  <select id="findRolesByAuthIdList" resultMap="BaseResultMap">
    select
      r.*
    from
      auth as a

      left join auth_role as ar
        on a.id = ar.auth_id
      left join roles as r
        on ar.role_id = r.role_id

    where
      ar.is_delete = false
      and a.is_delete = false
      and r.is_delete = false
      and a.id in 
      <foreach item="authId" index="index" collection="authIdList"
        open="(" separator="," close=")">
        #{authId}
      </foreach>
  </select>

  
</mapper>